{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","x","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAIaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,uBAAMC,SARU,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAIV,UACI,8CACA,uBAAOO,KAAK,OACZC,MAAST,EACTU,SAfkB,SAACP,GACvBF,GAAc,SAACM,GAAD,OAAWJ,EAAEQ,OAAOF,gB,+BCL7BG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,0BAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAMR,IACrB,4BAAIA,QCDHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAKrB,ECRwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAhC,GAAC,OAAI8B,EAAS,CAChBjB,KAAMb,EACN4B,SAAS,SAEd,CAACtB,IACGuB,EDNwBI,CAAa3B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QACpB,OACI,qCACA,6BAAKtB,IACJsB,GAAW,wCACZ,qBAAKJ,UAAU,+BAAf,SAEQL,EAAOJ,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,eAEIA,GADGA,EAAEiB,aEcViB,EA7BM,WAGjB,MAAoC1C,mBAAS,CAAC,iBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAKA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGI,6BACK4C,EAAWpB,KAAI,SAACT,GAAD,OAEhB,cAAC,EAAD,CAEAA,SAAaA,GADLA,YCnBlB8B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.4b4943cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = (  {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const handleInputChange = (e) => {\r\n        setInputValue((x) => x = e.target.value)\r\n    }\r\n    const handleSubmit =(e) =>{\r\n    e.preventDefault()\r\n    if(inputValue.trim().length > 2){\r\n    setCategories(x => [inputValue, ...x]);\r\n    setInputValue(\"\");\r\n    }\r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input type=\"text\"\r\n            value = {inputValue}\r\n            onChange={handleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=04RR9f1GwY1Et7mg9LCvbRTfa00BRgT1`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__heartBeat\">\r\n            <img src={url} alt ={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n//import { getGifs } from './helpers/getGifs'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    /*const [images, setimages] = useState([])\r\n    useEffect(() => getGifs(category)\r\n    .then(x => setimages(x)),[category])*/\r\n    \r\n    const {data:images, loading} = useFetchGifs(category)\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid animate__heartBeat\">\r\n                { \r\n                images.map((x) =>\r\n                <GifGridItem \r\n                key = {x.id}\r\n                {...x}\r\n                />\r\n                ) \r\n                }\r\n                \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n//[ ][ ][ ]\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(x => setstate({\r\n            data: x,\r\n            loading: false\r\n        }))\r\n    }, [category])\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = [\"breaking bad\",\"dragon ball\", \"weed\" ]\r\n    const [categories, setCategories] = useState([\"breaking bad\"])\r\n    /*const handleAdd = () => {\r\n        setCategories((x) => x.concat(\"Neas\"))\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <hr/>\r\n        \r\n        {\r\n            <ol>\r\n                {categories.map((category) =>\r\n\r\n                <GifGrid \r\n                key = { category }\r\n                category = { category }\r\n                />\r\n                ) \r\n                }\r\n            </ol>\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector(\"#root\");\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n\n"],"sourceRoot":""}